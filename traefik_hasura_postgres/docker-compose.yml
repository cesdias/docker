version: "3.7"
services:
  proxy:
    image: "traefik:2.2"
    command:
      - "--api.debug=true"
      - "--log.level=DEBUG"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=me@hacks.pro.br"
      - "--certificatesResolvers.le.acme.storage=/acme/acme.json"
      - "--certificatesResolvers.le.acme.tlschallenge=true"
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    volumes:
      - acme:/acme/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"

  graphql-engine:
    image: "hasura/graphql-engine:v1.1.1"
    depends_on:
      - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:Aiveid7n@postgres:5432/postgres"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
      HASURA_GRAPHQL_ADMIN_SECRET: "IeBee7ae"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.enable=true"

        - "traefik.http.routers.graphql-engine-http.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.graphql-engine-http.entrypoints=web"
        - "traefik.http.routers.graphql-engine-http.middlewares=redirect-to-https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

        - "traefik.http.routers.graphql-engine.rule=Host(`sefazpb.hacks.pro.br`)"
        - "traefik.http.routers.graphql-engine.entrypoints=websecure"
        - "traefik.http.routers.graphql-engine.tls=true"
        - "traefik.http.routers.graphql-engine.tls.certresolver=le"

        - "traefik.http.services.graphql-engine.loadbalancer.server.port=8080"

  postgres:
    image: "postgres:12"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "Aiveid7n"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"

volumes:
  acme:
  pgdata:
